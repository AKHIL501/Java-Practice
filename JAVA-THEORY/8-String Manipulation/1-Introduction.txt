
		String Manipulation
				
					Four Classes
					
					1.String Class
					2.String Buffer
					3.String builder
					4.String tokenizer
					
					String:- represents group of characters or character array 	enclosed with double quotes.
					
					
					String vs StringBuffer
					
					Case 1: String and StringBuffer both are final classes both are  present in lang package
					
					Case 2: to create string object we follow two approaches 
					A.without using new operator 
					B.using new operator
							String s1="AKHIL";
							String s2= new String("AKHIL")
							
							StringBuffer sb= new StringBuffer("AKHIL");
							
							Example:-
							
							class Test
							{
							public static void main(String args[])
							{
							
							String s1="AKHIL";
							System.out.println(s1);
							
							String s2= new String("AKHIL");
							System.out.println(s2);
							
							StringBuffer sb= new StringBuffer("AKHIL");
							System.out.println(sb);
							
							{
							}
					
					
					*** without using new keyword that strings are stored in scp memory (String constant pool memory) 
					*** with using new keyword that values are stored in Heap memory.
					
					Example 
					
					String s1="akhil"
					String s2="cse"
					String s3="akhil"
				
				SCP VS Heap
				SCP:-
				1.In scp area if any previous object is already have same data then another object is points to same data,
				if not available it creates new object
				2.no duplicates

				HEAP:-
				1.in heap area it does not check the object it creates new different objects.
				2.It allows duplicates
					
					
				Double equalto operator(==):- it is used to compare two reference variables, it return boolean as a return values
				if two reference variables are same it returns ture otherwise false
				
				s1==s2---->false
				s2==s3----> true
				
				Case 3:
				//immutable
				String s1="Akhil";---------->once we create the string object modifications are not allowed  that behavior is called immutable nature 
				s1.concat("abothu");
				sop(s1);//Akhil
				
				//mutable nature
				StringBuffer sb=new StringBuffer("Akhil");-->
					sb.append("abothu");
					sop(sb);//Akhilabothu
				
				***Case 4:   (toString()):-	In java we print reference variables it calls toString() method it belongs to object class

					Example:-
					class Test
					{
					public static void main (String args[])
					{
					Test t = new Test();
					System.out.println(t);
					System.out.println(t.toString());//--------> both outputs are same. (Test@17f1ba3) hashcode
					}
					}
					
					javap java.lang.Object
					
					object class implementation for String
					Example 1:-
					class Object
					{
						public String toString()
						{
						return "class-name@hashcode";
						}
						}
						
						hash code is a unique identification number generated by JVM to identify the objects uniquely.